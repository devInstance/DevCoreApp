// <auto-generated />
using System;
using DevInstance.DevCoreApp.Server.Database.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevInstance.DevCoreApp.Server.Database.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerApplicationDbContext))]
    [Migration("20230330025947_WeatherForecast")]
    partial class WeatherForecast
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DevInstance.DevCoreApp.Server.Database.Core.Models.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("DevInstance.DevCoreApp.Server.Database.Core.Models.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Temperature")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9238834c-7773-4a03-87a7-f3e58d9318f0"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6414),
                            Date = new DateTime(2023, 3, 30, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6368),
                            PublicId = "10beo5lbr3j1vdd4cajfa0dek3kf4co5",
                            Summary = "Hot",
                            Temperature = -9,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6416)
                        },
                        new
                        {
                            Id = new Guid("b86e1596-1740-4d77-b189-3253ecca5827"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6434),
                            Date = new DateTime(2023, 3, 31, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6432),
                            PublicId = "5ep7546caar3cca46afeb0da8a52c6s3",
                            Summary = "Hot",
                            Temperature = 34,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6435)
                        },
                        new
                        {
                            Id = new Guid("8ef960b5-aee1-4839-8b1c-e439f5520d22"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6491),
                            Date = new DateTime(2023, 4, 1, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6489),
                            PublicId = "qbf4pf68q5g3g724g9u9ub30tdo1c6s3",
                            Summary = "Freezing",
                            Temperature = -7,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6492)
                        },
                        new
                        {
                            Id = new Guid("3001f457-7c2d-4cc9-86ed-20a80d274285"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6511),
                            Date = new DateTime(2023, 4, 2, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6509),
                            PublicId = "dea8f8u7acc6pb34a8564a08sdv7r1n7",
                            Summary = "Scorching",
                            Temperature = 2,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6512)
                        },
                        new
                        {
                            Id = new Guid("bb261e61-4950-4e67-a841-492fb0ff8369"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6549),
                            Date = new DateTime(2023, 4, 3, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6547),
                            PublicId = "b4t3udk5pfqf4c24nb4ehfd8ce326caa",
                            Summary = "Sweltering",
                            Temperature = 8,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6550)
                        },
                        new
                        {
                            Id = new Guid("c0c97cf8-9cf5-40a1-8f20-2c6bb98404c5"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6564),
                            Date = new DateTime(2023, 4, 4, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6562),
                            PublicId = "gbf6eel956n99214hbqb44m5ae6c90n3",
                            Summary = "Hot",
                            Temperature = -6,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6565)
                        },
                        new
                        {
                            Id = new Guid("e0fe0455-2551-46b3-8917-be2ef2c432de"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6578),
                            Date = new DateTime(2023, 4, 5, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6577),
                            PublicId = "t9r794n5l9g96434eac6v5g3m7lfn7kd",
                            Summary = "Bracing",
                            Temperature = 10,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6580)
                        },
                        new
                        {
                            Id = new Guid("0037374a-beb5-4119-98bd-7ce0bac932d7"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6616),
                            Date = new DateTime(2023, 4, 6, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6614),
                            PublicId = "t1h3rfl1jf56j7f4082ag5s5m7hflb7a",
                            Summary = "Cool",
                            Temperature = 27,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6617)
                        },
                        new
                        {
                            Id = new Guid("b652a991-be7f-46b0-a166-14ce76c3110e"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6631),
                            Date = new DateTime(2023, 4, 7, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6629),
                            PublicId = "6ac4kdbae8g9l5e49aodp9a0mde2n33e",
                            Summary = "Bracing",
                            Temperature = 36,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6632)
                        },
                        new
                        {
                            Id = new Guid("b1fc1a00-e332-4cce-a8fd-35b03e2d6561"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6646),
                            Date = new DateTime(2023, 4, 8, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6644),
                            PublicId = "n766d290h7j1cc24j9h7a888gd2aq312",
                            Summary = "Chilly",
                            Temperature = 7,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6647)
                        },
                        new
                        {
                            Id = new Guid("ddf57409-5b5a-4bb1-9695-0af6cbdd3e2f"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6682),
                            Date = new DateTime(2023, 4, 9, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6680),
                            PublicId = "9cm3s5u7n1rbs3b4h9k1s526m7b09cub",
                            Summary = "Scorching",
                            Temperature = 1,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6684)
                        },
                        new
                        {
                            Id = new Guid("d16290a7-0a5e-4f74-a750-7aa5e142aa64"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6699),
                            Date = new DateTime(2023, 4, 10, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6697),
                            PublicId = "0064e8h9s520kf44ibubm9l5vfg5b2tb",
                            Summary = "Cool",
                            Temperature = 30,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6700)
                        },
                        new
                        {
                            Id = new Guid("4e709a32-b4bb-4e18-91db-7216dcfe70ac"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6714),
                            Date = new DateTime(2023, 4, 11, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6713),
                            PublicId = "i36el1p53ak9l14478be18lfb4rdufd2",
                            Summary = "Chilly",
                            Temperature = 20,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6716)
                        },
                        new
                        {
                            Id = new Guid("16c8e564-60cb-482f-8cfa-9a4881c888fe"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6750),
                            Date = new DateTime(2023, 4, 12, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6748),
                            PublicId = "56605ehf7esdm91448jbi938ecn5h7cc",
                            Summary = "Balmy",
                            Temperature = 10,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6751)
                        },
                        new
                        {
                            Id = new Guid("a27e200c-32c7-4321-a226-6a156530ba90"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6765),
                            Date = new DateTime(2023, 4, 13, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6763),
                            PublicId = "tdfai5o9p91agb0458d294r9kblbj7m9",
                            Summary = "Warm",
                            Temperature = -3,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6766)
                        },
                        new
                        {
                            Id = new Guid("c4a2b220-144d-4238-84bc-924d74ca8544"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6783),
                            Date = new DateTime(2023, 4, 14, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6781),
                            PublicId = "92s7oflfvbv1h944ob32j9obndrfm186",
                            Summary = "Scorching",
                            Temperature = 42,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6784)
                        },
                        new
                        {
                            Id = new Guid("db952aae-1c35-4985-98d6-9fe7dba6936e"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6820),
                            Date = new DateTime(2023, 4, 15, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6818),
                            PublicId = "j9d8e0q7nd8cr344gbufa4n9t7p538p9",
                            Summary = "Scorching",
                            Temperature = -15,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6821)
                        },
                        new
                        {
                            Id = new Guid("6a1a3a4c-2624-4695-95ff-e75144bb7596"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6835),
                            Date = new DateTime(2023, 4, 16, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6833),
                            PublicId = "cai7f8fe28ido9144a7eeeid78l18cr5",
                            Summary = "Mild",
                            Temperature = 43,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6836)
                        },
                        new
                        {
                            Id = new Guid("b851245a-ad89-4734-95ce-70623d045bad"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6850),
                            Date = new DateTime(2023, 4, 17, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6848),
                            PublicId = "5836s1vdpbn3mf94ob083e60n5v9mfmf",
                            Summary = "Sweltering",
                            Temperature = 15,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6851)
                        },
                        new
                        {
                            Id = new Guid("72f8cb5d-4e2b-4f22-bf01-dacf2af6d4e0"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6887),
                            Date = new DateTime(2023, 4, 18, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6885),
                            PublicId = "e8p7k30616daq1b4j9vf6ed8e0p9kbg5",
                            Summary = "Bracing",
                            Temperature = 43,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6888)
                        },
                        new
                        {
                            Id = new Guid("53e4f6fe-45d9-4a80-9270-272f026b0ddb"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6902),
                            Date = new DateTime(2023, 4, 19, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6901),
                            PublicId = "10p9pb92r9766624s94aa6h356eeqfp7",
                            Summary = "Freezing",
                            Temperature = -2,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6904)
                        },
                        new
                        {
                            Id = new Guid("c3667359-8d1b-4aa6-9421-da432825768b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6917),
                            Date = new DateTime(2023, 4, 20, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6915),
                            PublicId = "s5n1hb34qd92ca34h97660s1ufbc0638",
                            Summary = "Chilly",
                            Temperature = 4,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6918)
                        },
                        new
                        {
                            Id = new Guid("4135e969-8fbc-4e5c-b9bd-3b8c2d239013"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6952),
                            Date = new DateTime(2023, 4, 21, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6950),
                            PublicId = "76m9cc68md76i714p9ldp9t308h7d2hf",
                            Summary = "Chilly",
                            Temperature = 22,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6953)
                        },
                        new
                        {
                            Id = new Guid("21285781-afd9-4937-8333-12e08ccced9d"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6969),
                            Date = new DateTime(2023, 4, 22, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6967),
                            PublicId = "3e92dei1i5q5cab4pb8cqdeco98av7p3",
                            Summary = "Chilly",
                            Temperature = 8,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6970)
                        },
                        new
                        {
                            Id = new Guid("219fa5b2-1cc7-4fb2-b950-74f90a7eea55"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6984),
                            Date = new DateTime(2023, 4, 23, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6982),
                            PublicId = "l77280249aa09414eauft994g3e2o358",
                            Summary = "Hot",
                            Temperature = -3,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(6985)
                        },
                        new
                        {
                            Id = new Guid("eef12c61-09e1-4414-8990-97aadad220b9"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7028),
                            Date = new DateTime(2023, 4, 24, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7026),
                            PublicId = "obgf02nb187etf74sbhfb440h97c72if",
                            Summary = "Chilly",
                            Temperature = 40,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7029)
                        },
                        new
                        {
                            Id = new Guid("9ec271ba-bfb2-46a5-ba7b-2cb2a614b837"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7043),
                            Date = new DateTime(2023, 4, 25, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7041),
                            PublicId = "g172k31ae8feba64h9m5fe00idm7fc9e",
                            Summary = "Mild",
                            Temperature = 38,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7044)
                        },
                        new
                        {
                            Id = new Guid("173dcc9d-13c4-49ef-b1df-cd6dd3404a7b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7059),
                            Date = new DateTime(2023, 4, 26, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7057),
                            PublicId = "8ap3h1t5g16erb14a8lfn3tf106e78da",
                            Summary = "Warm",
                            Temperature = 42,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7060)
                        },
                        new
                        {
                            Id = new Guid("d0d6b6d4-f0c6-4b79-9393-4b7731b7c85e"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7094),
                            Date = new DateTime(2023, 4, 27, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7092),
                            PublicId = "k1v77ed014r9n97498tdq7i362k1f894",
                            Summary = "Warm",
                            Temperature = 36,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7095)
                        },
                        new
                        {
                            Id = new Guid("9b940f96-8746-4a3e-aca5-fbeadd5a8fd3"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7109),
                            Date = new DateTime(2023, 4, 28, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7107),
                            PublicId = "kfee36g3qb42n1845av7d208acnfg3e8",
                            Summary = "Mild",
                            Temperature = 6,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7110)
                        },
                        new
                        {
                            Id = new Guid("79016659-bdbf-4c84-901c-a0c2cb0891e2"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7144),
                            Date = new DateTime(2023, 4, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7142),
                            PublicId = "r39ebeqb9cg7lba4o9k57cd4p3dcs9j5",
                            Summary = "Balmy",
                            Temperature = 3,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7145)
                        },
                        new
                        {
                            Id = new Guid("c52453f2-c1f9-41a7-bc5b-ef91cf47911b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7161),
                            Date = new DateTime(2023, 4, 30, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7159),
                            PublicId = "ce82s9j75ec6c244lbs3tf34g1o39c2c",
                            Summary = "Sweltering",
                            Temperature = 25,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7162)
                        },
                        new
                        {
                            Id = new Guid("38dda5d7-cddf-494a-93e9-0b4fff98bacc"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7175),
                            Date = new DateTime(2023, 5, 1, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7173),
                            PublicId = "t7v116rd3eo7h9d4kbc2g1mbh9b4c4m5",
                            Summary = "Bracing",
                            Temperature = 5,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7176)
                        },
                        new
                        {
                            Id = new Guid("34f3050d-d738-42a1-89dc-968e3d49f2f7"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7210),
                            Date = new DateTime(2023, 5, 2, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7208),
                            PublicId = "f0c0gfj1j1mb0094f8p3v73624sbobp3",
                            Summary = "Sweltering",
                            Temperature = 22,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7211)
                        },
                        new
                        {
                            Id = new Guid("f4f7697b-4760-4f27-8f0b-80476a62edfd"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7225),
                            Date = new DateTime(2023, 5, 3, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7223),
                            PublicId = "feidqb86c28e9044ib9678k788e0odba",
                            Summary = "Freezing",
                            Temperature = -8,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7226)
                        },
                        new
                        {
                            Id = new Guid("7d2124e0-54b8-47e7-a263-7e1538355428"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7241),
                            Date = new DateTime(2023, 5, 4, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7239),
                            PublicId = "n5c888q1e01cg384aaf4gbo38c82ob12",
                            Summary = "Bracing",
                            Temperature = 47,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7242)
                        },
                        new
                        {
                            Id = new Guid("c37b7f83-564f-48a6-9e5d-ba07d17519a4"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7276),
                            Date = new DateTime(2023, 5, 5, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7274),
                            PublicId = "16b87accmdbef6f488c6q5k79e46k9sd",
                            Summary = "Sweltering",
                            Temperature = -5,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7277)
                        },
                        new
                        {
                            Id = new Guid("2554130f-5a4d-4439-8a15-e6794fa51ed5"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7290),
                            Date = new DateTime(2023, 5, 6, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7288),
                            PublicId = "kfhb400eu5dan9346ar360pbk928sdk1",
                            Summary = "Freezing",
                            Temperature = -20,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7292)
                        },
                        new
                        {
                            Id = new Guid("045c70c6-4892-489a-a5be-3fcd3f0858d3"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7305),
                            Date = new DateTime(2023, 5, 7, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7303),
                            PublicId = "14sffcsf8ee4p104g900beubjbodj766",
                            Summary = "Freezing",
                            Temperature = -10,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7306)
                        },
                        new
                        {
                            Id = new Guid("4a7801f2-f455-4f26-a457-32994d731c08"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7341),
                            Date = new DateTime(2023, 5, 8, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7339),
                            PublicId = "j3n7502cp5fc6a64ib20td8aj718j9q5",
                            Summary = "Bracing",
                            Temperature = 16,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7342)
                        },
                        new
                        {
                            Id = new Guid("5b4dc99c-c039-456e-80d9-8f52d41650dd"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7355),
                            Date = new DateTime(2023, 5, 9, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7353),
                            PublicId = "h5n9s1e2mdd2hda498q7vfr7n18c6ed2",
                            Summary = "Cool",
                            Temperature = 16,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7356)
                        },
                        new
                        {
                            Id = new Guid("58a27b5d-a905-4e2b-bbdc-35a929fb0281"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7369),
                            Date = new DateTime(2023, 5, 10, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7367),
                            PublicId = "fco5pb76t1j7c4f44aofl9off65c8ak3",
                            Summary = "Mild",
                            Temperature = 1,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7370)
                        },
                        new
                        {
                            Id = new Guid("57833035-b02a-4e2c-b894-ff5f76a9e4bd"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7404),
                            Date = new DateTime(2023, 5, 11, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7402),
                            PublicId = "tb6eo7k5sbfc8c54rb726056a88cgbhf",
                            Summary = "Bracing",
                            Temperature = 40,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7405)
                        },
                        new
                        {
                            Id = new Guid("d379f126-4ab0-453a-b16b-7176f496381c"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7419),
                            Date = new DateTime(2023, 5, 12, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7418),
                            PublicId = "hfv3o1f40c14v714b892r1cepd40ccl1",
                            Summary = "Freezing",
                            Temperature = 7,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7421)
                        },
                        new
                        {
                            Id = new Guid("e16465c1-1a6a-4c86-aef4-550956296e78"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7433),
                            Date = new DateTime(2023, 5, 13, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7431),
                            PublicId = "bas5o3d2v3c6ud546a6eu1de16f4ba6c",
                            Summary = "Cool",
                            Temperature = 42,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7434)
                        },
                        new
                        {
                            Id = new Guid("1090ddb0-f691-491e-a2f8-1aabf27595c6"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7469),
                            Date = new DateTime(2023, 5, 14, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7467),
                            PublicId = "8a5a72l7u5u71824cag5ubh96a1ambt3",
                            Summary = "Cool",
                            Temperature = -2,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7470)
                        },
                        new
                        {
                            Id = new Guid("247c32e2-c8d9-4132-b167-7dd921bfd086"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7484),
                            Date = new DateTime(2023, 5, 15, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7483),
                            PublicId = "l97c9c7agdl5e4f4281ej5h720kd78i9",
                            Summary = "Cool",
                            Temperature = 9,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7486)
                        },
                        new
                        {
                            Id = new Guid("9708c08f-327d-44e2-81a8-00463cbbef2c"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7501),
                            Date = new DateTime(2023, 5, 16, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7499),
                            PublicId = "c68cobj320v7g584h98ek7c8ce3876k3",
                            Summary = "Chilly",
                            Temperature = -8,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7502)
                        },
                        new
                        {
                            Id = new Guid("e763851d-af60-4cfc-a47a-c95b885a9709"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7544),
                            Date = new DateTime(2023, 5, 17, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7542),
                            PublicId = "m3m1ofof7ee09c24k9mdu3n166s732q7",
                            Summary = "Mild",
                            Temperature = -19,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7545)
                        },
                        new
                        {
                            Id = new Guid("f3b6fb9b-da4c-4725-b8e8-8598e3bcc63c"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7559),
                            Date = new DateTime(2023, 5, 18, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7557),
                            PublicId = "sdk3081aa6sdo11478r91ck5aal5683e",
                            Summary = "Mild",
                            Temperature = 26,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7560)
                        },
                        new
                        {
                            Id = new Guid("841d9508-c4e1-4b67-8260-05eaf4352e6f"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7574),
                            Date = new DateTime(2023, 5, 19, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7572),
                            PublicId = "r98accq5nb72hf64n9s37208pdr5v1gf",
                            Summary = "Balmy",
                            Temperature = 10,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7575)
                        },
                        new
                        {
                            Id = new Guid("d038b2a7-4d15-468e-a737-f8dec733cb3b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7613),
                            Date = new DateTime(2023, 5, 20, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7611),
                            PublicId = "109ekdqbpdf014d40ah1rd8ap1n3r9pd",
                            Summary = "Balmy",
                            Temperature = 2,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7614)
                        },
                        new
                        {
                            Id = new Guid("9db665bc-912c-45aa-abca-6d4e3166388d"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7628),
                            Date = new DateTime(2023, 5, 21, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7626),
                            PublicId = "h1h75c9cec4cced408u504a8f0ecm9kd",
                            Summary = "Sweltering",
                            Temperature = 54,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7629)
                        },
                        new
                        {
                            Id = new Guid("85bb2ed4-0473-4fbf-a468-6e1102478ac7"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7641),
                            Date = new DateTime(2023, 5, 22, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7640),
                            PublicId = "gbc8s1j75cm7g91438f2h5e8o5e2ce60",
                            Summary = "Warm",
                            Temperature = 47,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7643)
                        },
                        new
                        {
                            Id = new Guid("4b438e1a-4300-4aff-a7e2-1f54f0fc751d"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7677),
                            Date = new DateTime(2023, 5, 23, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7676),
                            PublicId = "3elff832kbk714445an32ed8sf98ac54",
                            Summary = "Chilly",
                            Temperature = -13,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7679)
                        },
                        new
                        {
                            Id = new Guid("2e834225-fcf8-43f7-a5d0-a8625e22f4cb"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7694),
                            Date = new DateTime(2023, 5, 24, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7693),
                            PublicId = "ob50qfacbed0h714ca308efee8o596l3",
                            Summary = "Chilly",
                            Temperature = 23,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7696)
                        },
                        new
                        {
                            Id = new Guid("9a074af5-ec1c-484d-8bec-60d9400ed3a3"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7709),
                            Date = new DateTime(2023, 5, 25, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7708),
                            PublicId = "l764q38440nd5e24r98632kbjbl9u7t9",
                            Summary = "Warm",
                            Temperature = 29,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7710)
                        },
                        new
                        {
                            Id = new Guid("b56039f0-4c84-4651-9e93-64101a60d579"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7745),
                            Date = new DateTime(2023, 5, 26, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7743),
                            PublicId = "q9ca9cf6v9i9p3e4b8k5e2j37240be08",
                            Summary = "Sweltering",
                            Temperature = -12,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7746)
                        },
                        new
                        {
                            Id = new Guid("94d8c93d-45d2-4aad-8a7f-8618a44834c2"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7760),
                            Date = new DateTime(2023, 5, 27, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7758),
                            PublicId = "odfat992o5d4a244caj53egfrfg10eqb",
                            Summary = "Bracing",
                            Temperature = 52,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7761)
                        },
                        new
                        {
                            Id = new Guid("1715c771-68f7-4080-a023-b7602fdb7af6"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7796),
                            Date = new DateTime(2023, 5, 28, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7794),
                            PublicId = "vd38kfq1g1m1i1b4sbifr922ee5cq91e",
                            Summary = "Balmy",
                            Temperature = -20,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7798)
                        },
                        new
                        {
                            Id = new Guid("7540773d-b5d1-47ee-980c-28f188639563"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7812),
                            Date = new DateTime(2023, 5, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7810),
                            PublicId = "106876q5basbi5e49aj760kbjd4844h3",
                            Summary = "Bracing",
                            Temperature = 42,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7813)
                        },
                        new
                        {
                            Id = new Guid("1db203ca-3d13-4d88-b494-9b2f78b940d6"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7826),
                            Date = new DateTime(2023, 5, 30, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7824),
                            PublicId = "ndof42t9j1e6vd747a54kddap1e08814",
                            Summary = "Hot",
                            Temperature = 2,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7827)
                        },
                        new
                        {
                            Id = new Guid("54e7591b-fc75-4a41-9990-99a53c2ab5d8"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7860),
                            Date = new DateTime(2023, 5, 31, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7858),
                            PublicId = "s31686b4lb28ld34ubp1o9k1a6d6vbh3",
                            Summary = "Balmy",
                            Temperature = 40,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7861)
                        },
                        new
                        {
                            Id = new Guid("3f332905-1ad0-4376-81a6-aa8c8632fed3"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7877),
                            Date = new DateTime(2023, 6, 1, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7875),
                            PublicId = "aeo3p7qbi134664428sb5a34u5nb604c",
                            Summary = "Cool",
                            Temperature = 12,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7878)
                        },
                        new
                        {
                            Id = new Guid("ff657389-ac94-41c3-ae9e-096b78cd5cb5"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7891),
                            Date = new DateTime(2023, 6, 2, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7890),
                            PublicId = "bc76jfk522vdsb14s9g9g9t5o3q31ctb",
                            Summary = "Hot",
                            Temperature = 23,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7893)
                        },
                        new
                        {
                            Id = new Guid("ba6b647e-b2d6-41b1-b51d-f16d0b0a22e1"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7926),
                            Date = new DateTime(2023, 6, 3, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7924),
                            PublicId = "ldof4a46k9rfk70478kfjfkb66j7t74c",
                            Summary = "Hot",
                            Temperature = 0,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7927)
                        },
                        new
                        {
                            Id = new Guid("c7aa11fe-6f02-455c-96b1-a6071e5f4196"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7941),
                            Date = new DateTime(2023, 6, 4, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7939),
                            PublicId = "1070b6o9eekdr57418faa6l722b6tdk7",
                            Summary = "Hot",
                            Temperature = 9,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7942)
                        },
                        new
                        {
                            Id = new Guid("e8bcb24e-b944-443d-aefd-5d8ad7a506ec"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7959),
                            Date = new DateTime(2023, 6, 5, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7957),
                            PublicId = "06gdm7tbt344i344tbi1fck9jdmf9acc",
                            Summary = "Chilly",
                            Temperature = -17,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7960)
                        },
                        new
                        {
                            Id = new Guid("c501f0c8-ae59-46d9-b208-2c09203e005d"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7994),
                            Date = new DateTime(2023, 6, 6, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7992),
                            PublicId = "8cufi9i3kfda36444894v3b642bes9lf",
                            Summary = "Mild",
                            Temperature = -19,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(7995)
                        },
                        new
                        {
                            Id = new Guid("d6bc881f-845b-45d3-ad70-de0256287356"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8009),
                            Date = new DateTime(2023, 6, 7, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8007),
                            PublicId = "h7v3l3l166d0s7f47a0as7ndgb5eu9j5",
                            Summary = "Scorching",
                            Temperature = -8,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8010)
                        },
                        new
                        {
                            Id = new Guid("dfdbe9d4-c74d-4121-a6c3-2828bc0b3acf"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8022),
                            Date = new DateTime(2023, 6, 8, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8021),
                            PublicId = "bc74kdg3v996nd84sbodn9rb84td98u1",
                            Summary = "Balmy",
                            Temperature = 42,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8024)
                        },
                        new
                        {
                            Id = new Guid("c1045662-3200-49ac-b465-a244ae4f4203"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8067),
                            Date = new DateTime(2023, 6, 9, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8065),
                            PublicId = "36k7b63cb404ibe498j5d6u1r3qd28m9",
                            Summary = "Scorching",
                            Temperature = 23,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8068)
                        },
                        new
                        {
                            Id = new Guid("c8756cec-049b-4939-b000-770210fbba1c"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8081),
                            Date = new DateTime(2023, 6, 10, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8079),
                            PublicId = "pb90e0ndhfu7l524kb62ofjbea0a24sf",
                            Summary = "Sweltering",
                            Temperature = 5,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8082)
                        },
                        new
                        {
                            Id = new Guid("ecda5fe5-40dd-4ef6-b6e3-f34637b35974"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8095),
                            Date = new DateTime(2023, 6, 11, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8093),
                            PublicId = "k750f8lfj1q10a74f810b29644b0ce62",
                            Summary = "Sweltering",
                            Temperature = -5,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8096)
                        },
                        new
                        {
                            Id = new Guid("4152b050-36ac-43a5-af08-a1b5e9ab3704"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8131),
                            Date = new DateTime(2023, 6, 12, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8129),
                            PublicId = "5e28p5u3kf643c1408m9e20ahbg1k316",
                            Summary = "Freezing",
                            Temperature = 20,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8132)
                        },
                        new
                        {
                            Id = new Guid("f5259b03-c186-44ed-ba8c-8819aed69e94"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8147),
                            Date = new DateTime(2023, 6, 13, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8146),
                            PublicId = "rf06ldc8a2vf3204nbaefe62uf1ad4f4",
                            Summary = "Scorching",
                            Temperature = 22,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8149)
                        },
                        new
                        {
                            Id = new Guid("9814abbc-7def-4d09-9e7b-4ee56cc2cc57"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8162),
                            Date = new DateTime(2023, 6, 14, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8160),
                            PublicId = "f680pbe226m7o304t9u5mb4eccid72aa",
                            Summary = "Sweltering",
                            Temperature = 35,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8163)
                        },
                        new
                        {
                            Id = new Guid("f023abb1-8566-4eae-b3db-b9fa3af99e33"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8196),
                            Date = new DateTime(2023, 6, 15, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8194),
                            PublicId = "pbk1idb2t3l7hd54sbf0g9obnbn5da0e",
                            Summary = "Sweltering",
                            Temperature = -14,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8198)
                        },
                        new
                        {
                            Id = new Guid("9cb9d4f0-ab47-44af-bfcf-e9b3d12437bb"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8212),
                            Date = new DateTime(2023, 6, 16, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8210),
                            PublicId = "kbuf8adajb62ec04r9hd7aaed0s3d4s3",
                            Summary = "Mild",
                            Temperature = 51,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8213)
                        },
                        new
                        {
                            Id = new Guid("c1815f81-e6d8-406b-8439-ac9ad4a4230e"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8229),
                            Date = new DateTime(2023, 6, 17, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8226),
                            PublicId = "5448243ak3h9sb1438t7a6nb04c0g724",
                            Summary = "Balmy",
                            Temperature = 49,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8230)
                        },
                        new
                        {
                            Id = new Guid("0c58cd45-3eab-42fc-9506-02c939617eea"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8264),
                            Date = new DateTime(2023, 6, 18, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8261),
                            PublicId = "fck1bem192bc98f4j98e66cea4tdhdi3",
                            Summary = "Balmy",
                            Temperature = 4,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8265)
                        },
                        new
                        {
                            Id = new Guid("ae15d15a-ab6d-4059-a376-8483a0ff14be"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8278),
                            Date = new DateTime(2023, 6, 19, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8276),
                            PublicId = "l3q1e4gdk3i9p594sbh506tbp1tb46t7",
                            Summary = "Freezing",
                            Temperature = -7,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8279)
                        },
                        new
                        {
                            Id = new Guid("097284dc-53bd-44af-81f0-aa71ce2544bc"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8317),
                            Date = new DateTime(2023, 6, 20, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8314),
                            PublicId = "c6g1o13aa87en1747af800j3286864f2",
                            Summary = "Freezing",
                            Temperature = 11,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8318)
                        },
                        new
                        {
                            Id = new Guid("7176534c-55b2-43e8-9a0f-9b4d6a73bb63"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8356),
                            Date = new DateTime(2023, 6, 21, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8354),
                            PublicId = "o9bcrdk9sf64sbf4b8ifu3523ec2u716",
                            Summary = "Bracing",
                            Temperature = 54,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8357)
                        },
                        new
                        {
                            Id = new Guid("7c328334-96db-409d-900a-e3fdd93b30fa"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8370),
                            Date = new DateTime(2023, 6, 22, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8369),
                            PublicId = "k1v3dej5ae2emff4lb408c2ae2f0445a",
                            Summary = "Hot",
                            Temperature = 22,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8371)
                        },
                        new
                        {
                            Id = new Guid("ce8e4f10-7ee8-4e62-8008-8877d3c3ff6c"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8405),
                            Date = new DateTime(2023, 6, 23, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8403),
                            PublicId = "h7ibp530vda8r504gbp9521ck720l7r1",
                            Summary = "Bracing",
                            Temperature = -18,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8406)
                        },
                        new
                        {
                            Id = new Guid("bd2069cd-1605-4142-bea7-58c206157cf9"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8419),
                            Date = new DateTime(2023, 6, 24, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8417),
                            PublicId = "i7r1kdq3s1v5qd14qb4c9652dei7gd0e",
                            Summary = "Sweltering",
                            Temperature = -17,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8420)
                        },
                        new
                        {
                            Id = new Guid("6c725e7d-f65f-498d-810f-40947766c2f9"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8434),
                            Date = new DateTime(2023, 6, 25, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8432),
                            PublicId = "p5t9r7g5r9o7j5f4pbkd96t326j7u7nf",
                            Summary = "Sweltering",
                            Temperature = 49,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8435)
                        },
                        new
                        {
                            Id = new Guid("88f948c0-f299-403b-90fd-4ca1d8e11414"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8472),
                            Date = new DateTime(2023, 6, 26, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8470),
                            PublicId = "3a5e0ac2o5p52e042a72gfs9j7c066id",
                            Summary = "Chilly",
                            Temperature = 4,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8473)
                        },
                        new
                        {
                            Id = new Guid("869cc999-d9bb-4f7d-a4a2-48700c7dbbb7"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8487),
                            Date = new DateTime(2023, 6, 27, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8485),
                            PublicId = "449a28b0aejfjd84q9l5ldr59496n52a",
                            Summary = "Sweltering",
                            Temperature = -15,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8488)
                        },
                        new
                        {
                            Id = new Guid("2cd0fdd6-5f88-4ca5-b5e8-6e3ae7a38c5b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8501),
                            Date = new DateTime(2023, 6, 28, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8500),
                            PublicId = "8ed0mf46p9c042643ap9f4a8vf3co170",
                            Summary = "Freezing",
                            Temperature = 17,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8502)
                        },
                        new
                        {
                            Id = new Guid("7bbd967c-2f40-4ab8-abd1-c45f57876e93"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8538),
                            Date = new DateTime(2023, 6, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8536),
                            PublicId = "923046sdf8ibp7c42a9eo172aec86a52",
                            Summary = "Cool",
                            Temperature = 50,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8539)
                        },
                        new
                        {
                            Id = new Guid("ac192a5c-a650-4c75-a782-2a3c09ed0cde"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8553),
                            Date = new DateTime(2023, 6, 30, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8551),
                            PublicId = "bevba030t9o7d204lb121emf3644s522",
                            Summary = "Mild",
                            Temperature = 42,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8554)
                        },
                        new
                        {
                            Id = new Guid("124c9277-762d-493c-97d0-0a49f74829df"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8567),
                            Date = new DateTime(2023, 7, 1, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8565),
                            PublicId = "jfp3u5985el1kf9468vdu5f6hb90r90a",
                            Summary = "Chilly",
                            Temperature = 26,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8568)
                        },
                        new
                        {
                            Id = new Guid("43fed3da-04b0-4d6c-8a63-6c1152090408"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8614),
                            Date = new DateTime(2023, 7, 2, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8612),
                            PublicId = "f2u9j528r3hdrdf4q98a7e20q190t798",
                            Summary = "Chilly",
                            Temperature = 14,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8615)
                        },
                        new
                        {
                            Id = new Guid("b08c6d3d-1448-449b-9646-0d3b64b8a84f"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8630),
                            Date = new DateTime(2023, 7, 3, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8629),
                            PublicId = "544e4a84kfm7fa64h9jdd0v5ufr9qbv9",
                            Summary = "Scorching",
                            Temperature = -11,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8631)
                        },
                        new
                        {
                            Id = new Guid("cc3fedfb-b4f9-4c7c-a945-f6de3a140d8f"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8644),
                            Date = new DateTime(2023, 7, 4, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8643),
                            PublicId = "c2eeb044t5dea8b47a9ac48698sbl74a",
                            Summary = "Bracing",
                            Temperature = 7,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8646)
                        },
                        new
                        {
                            Id = new Guid("cbbcf6fa-37d6-41ce-8927-18e0349c5280"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8679),
                            Date = new DateTime(2023, 7, 5, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8677),
                            PublicId = "h32cq9c65es5id04n9jdh92el5p1a6n3",
                            Summary = "Cool",
                            Temperature = -13,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8680)
                        },
                        new
                        {
                            Id = new Guid("b17f5cd1-4f0e-4362-a0e4-786384235bfe"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8694),
                            Date = new DateTime(2023, 7, 6, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8692),
                            PublicId = "c8o97aufu9ece694d8f0u59aaap5c2g7",
                            Summary = "Chilly",
                            Temperature = 3,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8695)
                        },
                        new
                        {
                            Id = new Guid("4f6d0c6e-f324-4ed0-b960-9dd16cfc0701"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8710),
                            Date = new DateTime(2023, 7, 7, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8708),
                            PublicId = "ubc6987e58h3o334g9n5pdf0ib12j7t5",
                            Summary = "Chilly",
                            Temperature = -15,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 59, 47, 782, DateTimeKind.Local).AddTicks(8711)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DevInstance.DevCoreApp.Server.Database.Core.Models.WeatherForecast", b =>
                {
                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.UserProfile", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.UserProfile", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
