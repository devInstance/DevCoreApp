// <auto-generated />
using System;
using DevInstance.DevCoreApp.Server.Database.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DevInstance.DevCoreApp.Server.Database.Postgres.Migrations
{
    [DbContext(typeof(PostgresApplicationDbContext))]
    [Migration("20230330025630_WeatherForecast")]
    partial class WeatherForecast
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DevInstance.DevCoreApp.Server.Database.Core.Models.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("DevInstance.DevCoreApp.Server.Database.Core.Models.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<int>("Temperature")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b011e0c2-263f-4243-89fc-3736831467cf"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5646),
                            Date = new DateTime(2023, 3, 30, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5590),
                            PublicId = "cc0a0cp7u5289004pb30fek93ad61ce8",
                            Summary = "Scorching",
                            Temperature = 17,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5648)
                        },
                        new
                        {
                            Id = new Guid("39ceaf19-d682-4551-895d-33929d558bd7"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5665),
                            Date = new DateTime(2023, 3, 31, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5663),
                            PublicId = "u77a960474f2cca45846r3hd66of36i7",
                            Summary = "Balmy",
                            Temperature = -12,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5666)
                        },
                        new
                        {
                            Id = new Guid("a2e94fad-866f-4666-b2f6-5bc08b5dfa0d"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5724),
                            Date = new DateTime(2023, 4, 1, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5721),
                            PublicId = "2ak966kf3ambu3e468v7q12cu3gdf87a",
                            Summary = "Scorching",
                            Temperature = 53,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5725)
                        },
                        new
                        {
                            Id = new Guid("930d6bd0-7573-4018-90a2-1f9ebc85b28a"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5745),
                            Date = new DateTime(2023, 4, 2, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5743),
                            PublicId = "8a0chf88u7gbk934l90cn92ada7ch7cc",
                            Summary = "Bracing",
                            Temperature = 16,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5746)
                        },
                        new
                        {
                            Id = new Guid("938eb043-ed51-40f3-b7a0-f67134f7eda9"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5763),
                            Date = new DateTime(2023, 4, 3, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5761),
                            PublicId = "58l974tb486a70e4g9ibd4i9gbccp3h7",
                            Summary = "Chilly",
                            Temperature = 34,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5764)
                        },
                        new
                        {
                            Id = new Guid("cbe3b43a-bc64-4c2a-9874-ae9e9bbec800"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5799),
                            Date = new DateTime(2023, 4, 4, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5797),
                            PublicId = "b4t572nf44g3p5147a28m3f0b616gf56",
                            Summary = "Cool",
                            Temperature = 28,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5800)
                        },
                        new
                        {
                            Id = new Guid("fb7ca828-bfd2-4c6b-8c6d-410f07b7acbf"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5816),
                            Date = new DateTime(2023, 4, 5, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5814),
                            PublicId = "h912hbn3p1l1f03468l5104ct9p9tba6",
                            Summary = "Sweltering",
                            Temperature = 3,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5817)
                        },
                        new
                        {
                            Id = new Guid("c88c7d70-a12b-4c65-9ce8-b7bf451e50e7"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5834),
                            Date = new DateTime(2023, 4, 6, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5832),
                            PublicId = "n5rdg98c8e0aea944822l5k1p9f8b6h7",
                            Summary = "Bracing",
                            Temperature = 18,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5835)
                        },
                        new
                        {
                            Id = new Guid("92456678-2200-4797-9bf2-e6939125ebb8"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5873),
                            Date = new DateTime(2023, 4, 7, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5871),
                            PublicId = "qb26m5n36ct10a04rbtbh1b0e6sfl1mb",
                            Summary = "Chilly",
                            Temperature = 7,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5874)
                        },
                        new
                        {
                            Id = new Guid("bfaaad6c-03e9-4b5c-bb53-38de3498738f"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5888),
                            Date = new DateTime(2023, 4, 8, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5886),
                            PublicId = "2a9ca4u5n948k95408lfdaq9h340dahd",
                            Summary = "Balmy",
                            Temperature = 0,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5889)
                        },
                        new
                        {
                            Id = new Guid("7d862e39-2306-4026-96ec-f67b2a65de25"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5903),
                            Date = new DateTime(2023, 4, 9, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5901),
                            PublicId = "7agff69828982444nbtb56tb52o5tdd2",
                            Summary = "Mild",
                            Temperature = 24,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5904)
                        },
                        new
                        {
                            Id = new Guid("51704150-1fa6-4b3f-a9e3-233278bae9d4"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5943),
                            Date = new DateTime(2023, 4, 10, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5941),
                            PublicId = "aee0u9k38ct196c4o9k5c8ldpb1254ee",
                            Summary = "Freezing",
                            Temperature = 47,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5944)
                        },
                        new
                        {
                            Id = new Guid("7837c6bf-1492-4f38-af66-83c61c2cb33b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5959),
                            Date = new DateTime(2023, 4, 11, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5957),
                            PublicId = "gbf4r5d8aap37e648a341ec84e5ce6hb",
                            Summary = "Cool",
                            Temperature = 36,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5960)
                        },
                        new
                        {
                            Id = new Guid("0f3ea382-bd33-499b-8647-64087e69289d"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5974),
                            Date = new DateTime(2023, 4, 12, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5972),
                            PublicId = "c8161aaebaaeb654k9ub86f214l3ibh5",
                            Summary = "Cool",
                            Temperature = -10,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(5975)
                        },
                        new
                        {
                            Id = new Guid("9a15b00b-1f9e-4868-bb44-d5505a458cfa"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6009),
                            Date = new DateTime(2023, 4, 13, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6007),
                            PublicId = "m5o5aaf0r1n7n504pb62r9p19ebc54f6",
                            Summary = "Bracing",
                            Temperature = 4,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6010)
                        },
                        new
                        {
                            Id = new Guid("e32bf116-d4e3-4a54-a943-d4f75a0e67da"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6027),
                            Date = new DateTime(2023, 4, 14, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6025),
                            PublicId = "30f0f42606kdcc045av7dam536g5i7o1",
                            Summary = "Sweltering",
                            Temperature = 51,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6028)
                        },
                        new
                        {
                            Id = new Guid("10e2e47d-4e6e-4aee-a9e4-dcd8c6a3cb79"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6042),
                            Date = new DateTime(2023, 4, 15, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6040),
                            PublicId = "j3jf0a86j7p3udc468fem3obt3s1davf",
                            Summary = "Chilly",
                            Temperature = 4,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6043)
                        },
                        new
                        {
                            Id = new Guid("7a8c2d0e-02d4-409a-85b8-78d6c38292f0"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6076),
                            Date = new DateTime(2023, 4, 16, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6074),
                            PublicId = "mdmbq1kf9am5bc94t9m3fatd4cg7qf26",
                            Summary = "Bracing",
                            Temperature = 33,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6077)
                        },
                        new
                        {
                            Id = new Guid("40d04d2e-f429-413e-bfb8-8d16d8dba122"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6091),
                            Date = new DateTime(2023, 4, 17, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6089),
                            PublicId = "e06e2ao948f4t944d8u1b6s1kdn3p97c",
                            Summary = "Freezing",
                            Temperature = 8,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6092)
                        },
                        new
                        {
                            Id = new Guid("3bf391e7-3036-4f41-a733-be39f3e1e7d5"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6128),
                            Date = new DateTime(2023, 4, 18, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6126),
                            PublicId = "a0jdp7sdae74l974u9l33eodhbhdlfod",
                            Summary = "Cool",
                            Temperature = 38,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6129)
                        },
                        new
                        {
                            Id = new Guid("9b8ce73f-d1d8-4a6c-870b-08777167ac8e"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6143),
                            Date = new DateTime(2023, 4, 19, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6141),
                            PublicId = "ud5au3l732k7g3345a8c80udeci9m7ec",
                            Summary = "Freezing",
                            Temperature = 35,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6144)
                        },
                        new
                        {
                            Id = new Guid("d310764b-92bc-457c-84de-a397dda0800b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6158),
                            Date = new DateTime(2023, 4, 20, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6156),
                            PublicId = "o764r3a6e2gf9c548a42bcv764r1s374",
                            Summary = "Bracing",
                            Temperature = 14,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6159)
                        },
                        new
                        {
                            Id = new Guid("0c83aa6f-0c68-4f97-8b36-658b7e296bbc"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6194),
                            Date = new DateTime(2023, 4, 21, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6192),
                            PublicId = "f6f4m1hfibt5pff458bei7b446deq9m7",
                            Summary = "Scorching",
                            Temperature = 43,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6196)
                        },
                        new
                        {
                            Id = new Guid("1f4e86ee-ad8d-4b5c-b3f0-77dbbc506428"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6211),
                            Date = new DateTime(2023, 4, 22, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6209),
                            PublicId = "ceh5nd7eibp3k394i9u3c8i7sbo5q5fe",
                            Summary = "Freezing",
                            Temperature = 27,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6236)
                        },
                        new
                        {
                            Id = new Guid("15c7028d-e98e-4146-8f5c-93f8d90c1ac2"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6251),
                            Date = new DateTime(2023, 4, 23, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6249),
                            PublicId = "jfodg3d6624cn124l91678n7g57cj7r7",
                            Summary = "Cool",
                            Temperature = -12,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6252)
                        },
                        new
                        {
                            Id = new Guid("d6e026ac-c621-417d-bbb0-d6db169e45dc"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6295),
                            Date = new DateTime(2023, 4, 24, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6293),
                            PublicId = "48lff0f6g7i7f6a4v9ibm9i5k5v1e6e0",
                            Summary = "Scorching",
                            Temperature = -8,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6296)
                        },
                        new
                        {
                            Id = new Guid("de8e09cd-7594-4e85-a992-308d85c5efb9"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6310),
                            Date = new DateTime(2023, 4, 25, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6308),
                            PublicId = "ccj1749c2elfo5541876s1sbc8r1l3i5",
                            Summary = "Hot",
                            Temperature = 35,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6311)
                        },
                        new
                        {
                            Id = new Guid("876237fe-fa7a-4e76-a84a-66f223fb14c3"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6327),
                            Date = new DateTime(2023, 4, 26, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6325),
                            PublicId = "0es51e74kdfaj3648ah1def0ce1cgf10",
                            Summary = "Cool",
                            Temperature = 3,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6328)
                        },
                        new
                        {
                            Id = new Guid("d38093ad-2f7e-4e93-ad3d-ee386dee48b2"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6363),
                            Date = new DateTime(2023, 4, 27, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6361),
                            PublicId = "64l7a69a20ifvb24nb3eq9n90858ae40",
                            Summary = "Freezing",
                            Temperature = 30,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6364)
                        },
                        new
                        {
                            Id = new Guid("c3e8b316-8336-47a2-ad00-5ef934eae55b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6378),
                            Date = new DateTime(2023, 4, 28, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6376),
                            PublicId = "r3g5u3udhbp5ae34r9a8d8ba1e862cr1",
                            Summary = "Scorching",
                            Temperature = 13,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6379)
                        },
                        new
                        {
                            Id = new Guid("74872830-6b0f-46cf-8782-803dcae58065"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6392),
                            Date = new DateTime(2023, 4, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6390),
                            PublicId = "d470c8a686j5q3245aubj52chdg1e0h7",
                            Summary = "Bracing",
                            Temperature = 31,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6393)
                        },
                        new
                        {
                            Id = new Guid("0fa73f0e-8cee-4b76-83da-4f47f71dbf93"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6430),
                            Date = new DateTime(2023, 4, 30, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6428),
                            PublicId = "s5dc4et158s5s974t9g9o5eetd54q7q1",
                            Summary = "Freezing",
                            Temperature = -17,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6431)
                        },
                        new
                        {
                            Id = new Guid("05e33a3f-adb8-45f9-8b31-fd3164e1ec30"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6444),
                            Date = new DateTime(2023, 5, 1, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6442),
                            PublicId = "pflbi9g5v16472d4h9r7ececa2rf50q9",
                            Summary = "Bracing",
                            Temperature = 24,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6445)
                        },
                        new
                        {
                            Id = new Guid("f38643f9-64cb-4edf-b010-dd612013b8cf"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6458),
                            Date = new DateTime(2023, 5, 2, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6456),
                            PublicId = "66e6p1id20lfe674p9tdf086dcf4j7b0",
                            Summary = "Freezing",
                            Temperature = -14,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6459)
                        },
                        new
                        {
                            Id = new Guid("136287c9-a709-48c7-8a4a-33eab49972d6"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6493),
                            Date = new DateTime(2023, 5, 3, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6491),
                            PublicId = "r516504ej5d6k77418v7e0jfdcr3t7g9",
                            Summary = "Chilly",
                            Temperature = -19,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6494)
                        },
                        new
                        {
                            Id = new Guid("1f8faa9b-c3fe-4201-9e08-43c0aec0bd06"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6510),
                            Date = new DateTime(2023, 5, 4, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6509),
                            PublicId = "b25a36m5jfsf48a4a86a9en9l5v974q7",
                            Summary = "Chilly",
                            Temperature = 36,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6512)
                        },
                        new
                        {
                            Id = new Guid("fa4b6e93-0dd8-41b6-ab37-9ec7b5943b36"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6525),
                            Date = new DateTime(2023, 5, 5, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6523),
                            PublicId = "c0o502e6ufa68024lbl5s3dauba6hdnf",
                            Summary = "Scorching",
                            Temperature = 32,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6526)
                        },
                        new
                        {
                            Id = new Guid("05aa36a6-2b4b-45d6-9ea3-a5cde47dd63c"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6559),
                            Date = new DateTime(2023, 5, 6, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6557),
                            PublicId = "8650d8j378q744a48ad8n3fc1084p1n7",
                            Summary = "Mild",
                            Temperature = -1,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6560)
                        },
                        new
                        {
                            Id = new Guid("77bd39c2-a366-4cb6-9b5b-6c7832243118"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6573),
                            Date = new DateTime(2023, 5, 7, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6571),
                            PublicId = "daq3u1r598g5pdd45a58d49ctfkd40f0",
                            Summary = "Freezing",
                            Temperature = 31,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6574)
                        },
                        new
                        {
                            Id = new Guid("ab305ca9-5920-4e00-925f-a5b7c3799d81"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6589),
                            Date = new DateTime(2023, 5, 8, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6587),
                            PublicId = "54h1p3c8428cbc042850u5q538d4oft5",
                            Summary = "Scorching",
                            Temperature = 44,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6591)
                        },
                        new
                        {
                            Id = new Guid("dbeded2c-1fe1-4867-89e6-67a4a4d183a1"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6624),
                            Date = new DateTime(2023, 5, 9, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6622),
                            PublicId = "m3e21aaei5kd9a34u9hdf0n7u5hbl914",
                            Summary = "Chilly",
                            Temperature = 44,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6625)
                        },
                        new
                        {
                            Id = new Guid("aec2ef09-78cc-424b-a33f-23d12a42fc4b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6638),
                            Date = new DateTime(2023, 5, 10, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6636),
                            PublicId = "daj502u1kbib2824m952ifu9f0b0m578",
                            Summary = "Cool",
                            Temperature = -6,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6639)
                        },
                        new
                        {
                            Id = new Guid("d06076db-59fb-47be-bf86-2e7a579b9a4e"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6653),
                            Date = new DateTime(2023, 5, 11, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6651),
                            PublicId = "k1nd344ak5c490b4g9d67at174f6r15e",
                            Summary = "Bracing",
                            Temperature = 1,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6654)
                        },
                        new
                        {
                            Id = new Guid("9b4c8d55-a05f-4efd-96a2-fdf6c56ac183"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6689),
                            Date = new DateTime(2023, 5, 12, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6687),
                            PublicId = "sdudo5kfpbi79ca46826v32agd76d294",
                            Summary = "Mild",
                            Temperature = -18,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6690)
                        },
                        new
                        {
                            Id = new Guid("3d911347-cb95-46b8-ae93-3c27ab77fe9b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6703),
                            Date = new DateTime(2023, 5, 13, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6701),
                            PublicId = "k50e78e478r7p1f4p94c90m7s5c0f480",
                            Summary = "Scorching",
                            Temperature = 13,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6704)
                        },
                        new
                        {
                            Id = new Guid("c0187d3c-64ed-4d51-ae7f-c48b74a31614"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6717),
                            Date = new DateTime(2023, 5, 14, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6715),
                            PublicId = "vbqdr3l1aa3ahf746886t3n92a04ofqd",
                            Summary = "Mild",
                            Temperature = 8,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6718)
                        },
                        new
                        {
                            Id = new Guid("8352ff55-adf0-44e6-9416-1e9cec0f15c6"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6761),
                            Date = new DateTime(2023, 5, 15, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6758),
                            PublicId = "j3e4gbe6pbndj144j97664l7cav706c6",
                            Summary = "Scorching",
                            Temperature = 33,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6762)
                        },
                        new
                        {
                            Id = new Guid("8c9c1a84-e5f3-4985-b28f-5f85c5e2d606"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6778),
                            Date = new DateTime(2023, 5, 16, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6776),
                            PublicId = "g7l7ca6c6a400064nbkf58c8684atdnf",
                            Summary = "Freezing",
                            Temperature = 27,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6779)
                        },
                        new
                        {
                            Id = new Guid("6f7f612f-681f-4dc0-af51-0abde4092680"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6822),
                            Date = new DateTime(2023, 5, 17, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6820),
                            PublicId = "h55esd6c2am5uf84ob82t718e02ci7kd",
                            Summary = "Chilly",
                            Temperature = -1,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6823)
                        },
                        new
                        {
                            Id = new Guid("d9cce2b9-c293-4c49-8214-2aedf08b1ecc"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6837),
                            Date = new DateTime(2023, 5, 18, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6835),
                            PublicId = "g3f2k190u1e6u3e4jbb8acnfs16ae87a",
                            Summary = "Hot",
                            Temperature = 11,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6838)
                        },
                        new
                        {
                            Id = new Guid("3c6514fa-0087-4888-b7f0-1f920fec087d"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6852),
                            Date = new DateTime(2023, 5, 19, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6850),
                            PublicId = "kde8727cn1463eb4pbea1c30nb66ecp7",
                            Summary = "Cool",
                            Temperature = -3,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6853)
                        },
                        new
                        {
                            Id = new Guid("a9d8c8ce-5765-495f-9261-ed88cea4ccdd"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6892),
                            Date = new DateTime(2023, 5, 20, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6889),
                            PublicId = "88if02o3f4uf0ec4i9e41ef47234m160",
                            Summary = "Hot",
                            Temperature = 2,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6893)
                        },
                        new
                        {
                            Id = new Guid("42e2c197-4e7f-4f6a-9f5e-a5c0347288b4"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6906),
                            Date = new DateTime(2023, 5, 21, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6904),
                            PublicId = "nb2ah3u1188c22a4e8sfjdsdf452f4k5",
                            Summary = "Sweltering",
                            Temperature = 27,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6907)
                        },
                        new
                        {
                            Id = new Guid("6ff4d774-363f-476f-9098-22c78e5d47d2"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6920),
                            Date = new DateTime(2023, 5, 22, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6918),
                            PublicId = "jbvfq51atf984ee4lbidu148h9s9v178",
                            Summary = "Cool",
                            Temperature = -12,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6921)
                        },
                        new
                        {
                            Id = new Guid("4cb15e2a-77d1-46df-86ce-d6e44b9b3f82"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6955),
                            Date = new DateTime(2023, 5, 23, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6954),
                            PublicId = "h7m768n7hbob88543a28a8gds756t962",
                            Summary = "Freezing",
                            Temperature = 27,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6957)
                        },
                        new
                        {
                            Id = new Guid("3ee0d633-09fc-4e0b-ab07-df4620c4fdcb"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6973),
                            Date = new DateTime(2023, 5, 24, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6971),
                            PublicId = "52l18a4e020c1c84c8gbj53aub9akfi9",
                            Summary = "Hot",
                            Temperature = 44,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6974)
                        },
                        new
                        {
                            Id = new Guid("dda95f9d-b9eb-422e-b846-75253cde05cb"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6989),
                            Date = new DateTime(2023, 5, 25, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6987),
                            PublicId = "3694ufn5i3a8lfe4m9n9h3r5988a0a24",
                            Summary = "Freezing",
                            Temperature = -16,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(6990)
                        },
                        new
                        {
                            Id = new Guid("23b7d85b-afaa-423f-893e-0df6224a71a3"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7024),
                            Date = new DateTime(2023, 5, 26, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7022),
                            PublicId = "286e0800n7kb5604q936n3l5j59c62g7",
                            Summary = "Mild",
                            Temperature = 18,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7025)
                        },
                        new
                        {
                            Id = new Guid("62826307-2ce7-476a-85e2-6145c917ba99"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7039),
                            Date = new DateTime(2023, 5, 27, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7037),
                            PublicId = "v346ec68ecsb9814rbhfs5u3l588l95a",
                            Summary = "Mild",
                            Temperature = 25,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7040)
                        },
                        new
                        {
                            Id = new Guid("cf62969b-e0a7-4d69-8112-042f16580750"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7055),
                            Date = new DateTime(2023, 5, 28, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7053),
                            PublicId = "5em5hf64tf96i734u9t9e6r3i7qd9cid",
                            Summary = "Chilly",
                            Temperature = 19,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7056)
                        },
                        new
                        {
                            Id = new Guid("ff81987e-86dc-4304-acb5-5951d1ef6227"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7090),
                            Date = new DateTime(2023, 5, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7088),
                            PublicId = "0000h3l180pf8834a86ai348r5u5aco5",
                            Summary = "Freezing",
                            Temperature = 27,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7092)
                        },
                        new
                        {
                            Id = new Guid("ca97410c-63b5-46e5-8f97-286cddcb1f43"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7105),
                            Date = new DateTime(2023, 5, 30, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7103),
                            PublicId = "k74eqfv7eec4v154p9ibq5q1v9k5d8de",
                            Summary = "Warm",
                            Temperature = -15,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7106)
                        },
                        new
                        {
                            Id = new Guid("13baf729-f4b7-4020-8ce7-2fc899ff2eab"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7119),
                            Date = new DateTime(2023, 5, 31, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7117),
                            PublicId = "h3kb0cb866rfe4c4mb50l1889ceep7sb",
                            Summary = "Bracing",
                            Temperature = 40,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7121)
                        },
                        new
                        {
                            Id = new Guid("4031e091-cd4d-4a8c-bf60-68db36e46bcf"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7157),
                            Date = new DateTime(2023, 6, 1, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7155),
                            PublicId = "cab69cl9ba0e681478rdk5747cack3l9",
                            Summary = "Chilly",
                            Temperature = 22,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7158)
                        },
                        new
                        {
                            Id = new Guid("eca2e6fe-8a67-4e59-8d9d-3c7655ac2856"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7171),
                            Date = new DateTime(2023, 6, 2, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7169),
                            PublicId = "k5sflbg5c4h9u934ubjbg3ca065c82p3",
                            Summary = "Hot",
                            Temperature = 46,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7173)
                        },
                        new
                        {
                            Id = new Guid("ccc46c75-870a-42b1-9f1a-127d4318a585"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7186),
                            Date = new DateTime(2023, 6, 3, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7184),
                            PublicId = "b8aau344f0287614p914cerft3ld3c3a",
                            Summary = "Warm",
                            Temperature = 32,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7187)
                        },
                        new
                        {
                            Id = new Guid("9f9481f0-db18-4b97-a81e-6a136a6f06a3"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7222),
                            Date = new DateTime(2023, 6, 4, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7220),
                            PublicId = "4ch768q7642a8e94j9f2d61e4cpdq7ca",
                            Summary = "Balmy",
                            Temperature = 15,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7223)
                        },
                        new
                        {
                            Id = new Guid("a319dcea-ef16-4eb5-b3a0-3733fd2d790f"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7238),
                            Date = new DateTime(2023, 6, 5, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7237),
                            PublicId = "eec46858h9mde4647ae6n304862ef22c",
                            Summary = "Scorching",
                            Temperature = 6,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = new Guid("c601ab4d-146e-40a4-be3a-755f096f1b8a"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7252),
                            Date = new DateTime(2023, 6, 6, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7250),
                            PublicId = "m1e4n3s9cc648444obqbc4hf667er5v7",
                            Summary = "Balmy",
                            Temperature = 50,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7253)
                        },
                        new
                        {
                            Id = new Guid("489fa051-ac0c-4de2-ba1b-1cbd819834f6"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7289),
                            Date = new DateTime(2023, 6, 7, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7287),
                            PublicId = "aaifqfs9vdbe747408a87cg916f482n7",
                            Summary = "Sweltering",
                            Temperature = 52,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7290)
                        },
                        new
                        {
                            Id = new Guid("8a4ce1bb-37b6-4e4c-9092-13522c75fab6"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7304),
                            Date = new DateTime(2023, 6, 8, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7302),
                            PublicId = "5a16uffav1r9r3e4ibg1ecobib5cn950",
                            Summary = "Sweltering",
                            Temperature = 49,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7305)
                        },
                        new
                        {
                            Id = new Guid("63398d09-1f76-416b-9a3e-c109b99e65ef"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7321),
                            Date = new DateTime(2023, 6, 9, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7319),
                            PublicId = "g1jf9cufa04496d47838a08c56rf06s7",
                            Summary = "Freezing",
                            Temperature = -14,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7322)
                        },
                        new
                        {
                            Id = new Guid("c8bd27b6-d133-44bc-ae6f-d8d3265143e7"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7365),
                            Date = new DateTime(2023, 6, 10, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7363),
                            PublicId = "h1a0b4r3o9s50434688c74rdn932j9i3",
                            Summary = "Freezing",
                            Temperature = 18,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7366)
                        },
                        new
                        {
                            Id = new Guid("47f40dc6-c7c9-4901-ab3a-477976ba8e3d"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7379),
                            Date = new DateTime(2023, 6, 11, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7377),
                            PublicId = "s9q1udc0008e56249826u928gd98d6sb",
                            Summary = "Freezing",
                            Temperature = 1,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7380)
                        },
                        new
                        {
                            Id = new Guid("913e8fad-0fd0-4238-a8cc-46e7d1bff4bd"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7415),
                            Date = new DateTime(2023, 6, 12, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7413),
                            PublicId = "ec6072v590b4nff4ub94ib4024v99er3",
                            Summary = "Hot",
                            Temperature = 19,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7416)
                        },
                        new
                        {
                            Id = new Guid("6d6fb3e4-deec-4213-a7f5-65b84cfbffd4"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7432),
                            Date = new DateTime(2023, 6, 13, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7431),
                            PublicId = "v3sbifa46an548f4i9mblf7e5ad2eehb",
                            Summary = "Sweltering",
                            Temperature = 1,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7433)
                        },
                        new
                        {
                            Id = new Guid("981a37de-bf0d-4d9b-a1d0-ca54355b82e4"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7447),
                            Date = new DateTime(2023, 6, 14, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7445),
                            PublicId = "nd96b608v356sf74n958ofg11e3avfjd",
                            Summary = "Bracing",
                            Temperature = 4,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7448)
                        },
                        new
                        {
                            Id = new Guid("17d602ab-fc13-445b-9766-3ef4c2297d9b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7482),
                            Date = new DateTime(2023, 6, 15, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7480),
                            PublicId = "7496b8v17c90g5e418cc04fe0cn9udu1",
                            Summary = "Balmy",
                            Temperature = 2,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7483)
                        },
                        new
                        {
                            Id = new Guid("d30b573a-a00f-44be-9552-d6040cf69fd1"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7497),
                            Date = new DateTime(2023, 6, 16, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7495),
                            PublicId = "m7n7aeh5jb5and74vbp7kf14k7q9g50c",
                            Summary = "Freezing",
                            Temperature = -13,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7498)
                        },
                        new
                        {
                            Id = new Guid("fd2ab41e-19fa-4c27-8dd8-efad2d41d555"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7512),
                            Date = new DateTime(2023, 6, 17, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7510),
                            PublicId = "h794h5d6d2u7n154a8v9lb08l1m3l1p1",
                            Summary = "Sweltering",
                            Temperature = 2,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7513)
                        },
                        new
                        {
                            Id = new Guid("c6b1d108-2f64-4843-aaaa-eb35cba68b13"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7546),
                            Date = new DateTime(2023, 6, 18, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7544),
                            PublicId = "pdm95c3aib66o5b4a8f6h5h5sf98rfp5",
                            Summary = "Bracing",
                            Temperature = -10,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7548)
                        },
                        new
                        {
                            Id = new Guid("99896b58-ab3c-48a7-bcdc-91bda4d7c633"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7561),
                            Date = new DateTime(2023, 6, 19, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7559),
                            PublicId = "g3pdvfrf068cb064d8cesbe82e4eb2q3",
                            Summary = "Balmy",
                            Temperature = 25,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7562)
                        },
                        new
                        {
                            Id = new Guid("5c19bea1-221e-409a-952b-feaf6b8194ba"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7575),
                            Date = new DateTime(2023, 6, 20, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7573),
                            PublicId = "dcdajbl5n9j58414lbkbm388o112s588",
                            Summary = "Scorching",
                            Temperature = 31,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7576)
                        },
                        new
                        {
                            Id = new Guid("150972cb-2f4b-4691-af30-66729a55ecb6"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7612),
                            Date = new DateTime(2023, 6, 21, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7610),
                            PublicId = "62bcg58090hb6cf488hb2aaef298rdt1",
                            Summary = "Warm",
                            Temperature = -6,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7613)
                        },
                        new
                        {
                            Id = new Guid("0f63973b-e6e9-4e1d-8d15-c092aaf254e8"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7627),
                            Date = new DateTime(2023, 6, 22, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7625),
                            PublicId = "e0dcv1ob4ak1b2b4v942rdf8qf12f0g5",
                            Summary = "Sweltering",
                            Temperature = 14,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7628)
                        },
                        new
                        {
                            Id = new Guid("a91b260a-0f33-469c-a96c-a8b86b7ba6f9"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7641),
                            Date = new DateTime(2023, 6, 23, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7639),
                            PublicId = "k7j1o3v7a4o5r7e4vbl56e96rdp506v1",
                            Summary = "Freezing",
                            Temperature = -4,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7642)
                        },
                        new
                        {
                            Id = new Guid("31317c68-f76f-4f66-8382-087c1046d668"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7675),
                            Date = new DateTime(2023, 6, 24, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7674),
                            PublicId = "32m7ifs7gff6888498e0404a2av35ehb",
                            Summary = "Warm",
                            Temperature = -3,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7677)
                        },
                        new
                        {
                            Id = new Guid("f82454e0-520c-46b6-87fe-c7b893173be4"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7692),
                            Date = new DateTime(2023, 6, 25, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7690),
                            PublicId = "5aj5e672ub54c014aa608el346b2a67a",
                            Summary = "Mild",
                            Temperature = 11,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7693)
                        },
                        new
                        {
                            Id = new Guid("21039582-2935-4fd7-a982-365e663a1e18"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7706),
                            Date = new DateTime(2023, 6, 26, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7704),
                            PublicId = "obc0odl1mbb8r314a8c8h1eev5c6o9nf",
                            Summary = "Warm",
                            Temperature = 6,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7707)
                        },
                        new
                        {
                            Id = new Guid("166ea447-8ce2-4139-8ab6-a11d88510e22"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7743),
                            Date = new DateTime(2023, 6, 27, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7741),
                            PublicId = "a2dam95en9tdq1e44at928odp7hdd4c6",
                            Summary = "Sweltering",
                            Temperature = 45,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7744)
                        },
                        new
                        {
                            Id = new Guid("12f25e22-b958-42e8-8283-4d07a31f2f9b"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7758),
                            Date = new DateTime(2023, 6, 28, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7756),
                            PublicId = "q92ej3l1s9hf2a64kb1864t73cpfc446",
                            Summary = "Warm",
                            Temperature = 14,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7759)
                        },
                        new
                        {
                            Id = new Guid("ab936fa6-f02d-4679-9ed1-7a3ef54527ef"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7774),
                            Date = new DateTime(2023, 6, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7772),
                            PublicId = "pdo52ckdo3e4m7f4g97afcb2p912t504",
                            Summary = "Hot",
                            Temperature = -16,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7775)
                        },
                        new
                        {
                            Id = new Guid("9c4c7896-bc0a-4afd-9151-dbf2ad2dfd36"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7809),
                            Date = new DateTime(2023, 6, 30, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7807),
                            PublicId = "14l58co552i3a8848at9sbc82086h966",
                            Summary = "Hot",
                            Temperature = 45,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7810)
                        },
                        new
                        {
                            Id = new Guid("9c5cd885-27cd-4f15-ba64-b75945043208"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7823),
                            Date = new DateTime(2023, 7, 1, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7821),
                            PublicId = "u55058t3kf96m7444876mdo7p1m16822",
                            Summary = "Mild",
                            Temperature = 5,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7824)
                        },
                        new
                        {
                            Id = new Guid("e12a2c18-16f2-47c3-a6a8-80e7b2cd3fe3"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7838),
                            Date = new DateTime(2023, 7, 2, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7836),
                            PublicId = "38lfrft1p9104074pb8cs738e2gdlb42",
                            Summary = "Warm",
                            Temperature = 11,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7839)
                        },
                        new
                        {
                            Id = new Guid("90c1c85d-2593-424b-b7a0-1e531f085e0d"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7884),
                            Date = new DateTime(2023, 7, 3, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7882),
                            PublicId = "583ak9i90eg1bc946888v71cvdq988hb",
                            Summary = "Warm",
                            Temperature = 16,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7885)
                        },
                        new
                        {
                            Id = new Guid("145c0307-fdf6-4e04-a4e9-76d9fbb73a07"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7899),
                            Date = new DateTime(2023, 7, 4, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7897),
                            PublicId = "l1o9acgdl30emb64e808a49ac0mdbea6",
                            Summary = "Freezing",
                            Temperature = -14,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7900)
                        },
                        new
                        {
                            Id = new Guid("6583fa67-ac5a-409c-b5a1-1b97969a6170"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7912),
                            Date = new DateTime(2023, 7, 5, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7911),
                            PublicId = "gb68vfeak992r7b4d8c24emdn9ifp3o3",
                            Summary = "Warm",
                            Temperature = 52,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7914)
                        },
                        new
                        {
                            Id = new Guid("67835124-9bdc-48c8-816a-fcc4ff3e3fed"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7947),
                            Date = new DateTime(2023, 7, 6, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7945),
                            PublicId = "o9acqft1b4c8kb04d8pd0cv3ifkdc6de",
                            Summary = "Bracing",
                            Temperature = -20,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7948)
                        },
                        new
                        {
                            Id = new Guid("27d3bbd2-a187-4fbd-8b03-663855865c0a"),
                            CreateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7963),
                            Date = new DateTime(2023, 7, 7, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7961),
                            PublicId = "car5v790o9qbl7f4i9kbf8gdcabcm300",
                            Summary = "Balmy",
                            Temperature = 11,
                            UpdateDate = new DateTime(2023, 3, 29, 19, 56, 30, 71, DateTimeKind.Local).AddTicks(7964)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DevInstance.DevCoreApp.Server.Database.Core.Models.WeatherForecast", b =>
                {
                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.UserProfile", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.UserProfile", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("DevInstance.DevCoreApp.Server.Database.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
